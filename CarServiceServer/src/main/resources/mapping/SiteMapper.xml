<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jundger.work.dao.SiteMapper">
    <resultMap id="BaseResultMap" type="com.jundger.work.pojo.Site">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <constructor>
            <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="owner_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="address" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="describe" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="liked" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="longitude" javaType="java.lang.Float" jdbcType="REAL"/>
            <arg column="latitude" javaType="java.lang.Float" jdbcType="REAL"/>
            <arg column="picture" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="property" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="detail" javaType="java.lang.String" jdbcType="VARCHAR"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, name, owner_id, address, describe, liked, longitude, latitude, picture, property,
        detail
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from site
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from site
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.jundger.work.pojo.Site">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into site (id, name, owner_id,
        address, describe, liked,
        longitude, latitude, picture,
        property, detail)
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{ownerId,jdbcType=INTEGER},
        #{address,jdbcType=VARCHAR}, #{describe,jdbcType=VARCHAR}, #{liked,jdbcType=INTEGER},
        #{longitude,jdbcType=REAL}, #{latitude,jdbcType=REAL}, #{picture,jdbcType=VARCHAR},
        #{property,jdbcType=VARCHAR}, #{detail,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.jundger.work.pojo.Site">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into site
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="ownerId != null">
                owner_id,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="describe != null">
                describe,
            </if>
            <if test="liked != null">
                liked,
            </if>
            <if test="longitude != null">
                longitude,
            </if>
            <if test="latitude != null">
                latitude,
            </if>
            <if test="picture != null">
                picture,
            </if>
            <if test="property != null">
                property,
            </if>
            <if test="detail != null">
                detail,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="ownerId != null">
                #{ownerId,jdbcType=INTEGER},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="describe != null">
                #{describe,jdbcType=VARCHAR},
            </if>
            <if test="liked != null">
                #{liked,jdbcType=INTEGER},
            </if>
            <if test="longitude != null">
                #{longitude,jdbcType=REAL},
            </if>
            <if test="latitude != null">
                #{latitude,jdbcType=REAL},
            </if>
            <if test="picture != null">
                #{picture,jdbcType=VARCHAR},
            </if>
            <if test="property != null">
                #{property,jdbcType=VARCHAR},
            </if>
            <if test="detail != null">
                #{detail,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.jundger.work.pojo.Site">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update site
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="ownerId != null">
                owner_id = #{ownerId,jdbcType=INTEGER},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="describe != null">
                describe = #{describe,jdbcType=VARCHAR},
            </if>
            <if test="liked != null">
                liked = #{liked,jdbcType=INTEGER},
            </if>
            <if test="longitude != null">
                longitude = #{longitude,jdbcType=REAL},
            </if>
            <if test="latitude != null">
                latitude = #{latitude,jdbcType=REAL},
            </if>
            <if test="picture != null">
                picture = #{picture,jdbcType=VARCHAR},
            </if>
            <if test="property != null">
                property = #{property,jdbcType=VARCHAR},
            </if>
            <if test="detail != null">
                detail = #{detail,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.jundger.work.pojo.Site">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update site
        set name = #{name,jdbcType=VARCHAR},
        owner_id = #{ownerId,jdbcType=INTEGER},
        address = #{address,jdbcType=VARCHAR},
        describe = #{describe,jdbcType=VARCHAR},
        liked = #{liked,jdbcType=INTEGER},
        longitude = #{longitude,jdbcType=REAL},
        latitude = #{latitude,jdbcType=REAL},
        picture = #{picture,jdbcType=VARCHAR},
        property = #{property,jdbcType=VARCHAR},
        detail = #{detail,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <resultMap id="locationMap" type="map">
        <id column="id" javaType="int" property="id"/>
        <result column="name" javaType="string" property="name"/>
        <result column="address" javaType="string" property="address"/>
        <result column="longitude" javaType="float" property="longitude"/>
        <result column="latitude" javaType="float" property="latitude"/>
    </resultMap>

    <select id="selectLocation" resultMap="locationMap">
        SELECT id, name, address, longitude, latitude FROM site
    </select>

    <resultMap id="servicePointMap" type="map">
        <id column="id" javaType="int" property="id"/>
        <result column="name" javaType="string" property="name"/>
        <result column="address" javaType="string" property="address"/>
        <result column="picture" javaType="string" property="picture"/>
        <result column="score" javaType="float" property="score"/>
        <result column="num" javaType="int" property="count"/>
        <result column="longitude" javaType="float" property="longitude"/>
        <result column="latitude" javaType="float" property="latitude"/>
        <result column="distance" javaType="double" property="distance"/>
    </resultMap>

    <select id="selectNearList" resultMap="servicePointMap">
        SELECT
        site.id AS id, site.name AS name, site.address AS address,
        site.picture AS picture, TRUNCATE(AVG(comment.score),1) AS score,
        site.longitude AS longitude, site.latitude AS latitude, COUNT(*) AS num,(
        6371 * acos (
        cos ( radians(#{latitude,jdbcType=REAL}) )
        * cos( radians( latitude ) )
        * cos( radians( longitude ) - radians(#{longitude,jdbcType=REAL}) )
        + sin ( radians(#{latitude,jdbcType=REAL}) )
        * sin( radians( latitude ) )
        )
        ) AS distance
        FROM comment, site
        WHERE comment.site_id = site.id
        GROUP BY site.id
        HAVING distance &lt; #{radius,jdbcType=REAL}
        ORDER BY distance;
    </select>


    <select id="selectNearSiteOwnerId" resultType="java.lang.String">
        SELECT
        repairman.nickname AS REPAIRMANNO
        FROM comment, site, repairman
        WHERE comment.site_id = site.id AND site.owner_id = repairman.id
        AND (6371 * acos (
        cos ( radians(#{latitude,jdbcType=REAL}) )
        * cos( radians( latitude ) )
        * cos( radians( longitude ) - radians(#{longitude,jdbcType=REAL}) )
        + sin ( radians(#{latitude,jdbcType=REAL}) )
        * sin( radians( latitude ) )
        )) &lt; #{radius,jdbcType=REAL}
        GROUP BY site.id
    </select>

    <select id="selectSiteByName" parameterType="java.lang.String" resultMap="servicePointMap">
      SELECT * from site WHERE name = #{name,jdbcType=VARCHAR}
    </select>

</mapper>